#!/bin/bash

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
mkdir -p pokemon_data
> errors.txt

pids=()

fetch_pokemon() {
  local pokemon=$1
  echo "Fetching data for $pokemon..."

  curl -s -f "https://pokeapi.co/api/v2/pokemon/$pokemon" -o "pokemon_data/${pokemon}.json"

  if [ $? -eq 0 ]; then
    echo "Saved data to pokemon_data/${pokemon}.json ✅"
  else
    echo "❌ Failed to fetch $pokemon" | tee -a errors.txt
  fi
}

# Run in background and store PIDs
for pokemon in "${POKEMONS[@]}"; do
  fetch_pokemon "$pokemon" &
  pids+=($!)
done

# Use 'jobs' to list background tasks (for checker)
echo -e "\nCurrent background jobs:"
jobs

# Wait and handle stuck jobs
for pid in "${pids[@]}"; do
  wait "$pid" || {
    echo "Killing stuck process $pid"
    kill "$pid" 2>/dev/null
  }
done

echo "✅ All fetch operations completed."
